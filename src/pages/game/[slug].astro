---

export const prerender = true;

import games from '../../../data/games.json';
import MainLayout from '../../layouts/MainLayout.astro';
import GameDescription from '../../components/GameDescription.astro';

export async function getStaticPaths() {
  return games.map((game) => ({ params: { slug: game.slug } }));
}

const { slug } = Astro.params;
const game = games.find((g) => g.slug === slug);;

if (!game) {
  throw new Error('Game not found');
}

const otherGames = games.filter((g) => g.slug !== slug);

const categories = [
  { icon: 'populaires', name: 'Populaires', highlight: true },
  { icon: '2-joueurs', name: '2 Joueurs' },
  { icon: '3d', name: '3D' },
  { icon: 'action', name: 'Action' },
  { icon: 'arcade', name: 'Arcade' },
  { icon: 'aventure', name: 'Aventure' },
  { icon: 'brainrot', name: 'Brainrot' },
  { icon: 'clavier', name: 'Clavier' },
  { icon: 'combat', name: 'Combat' },
  { icon: 'conduite', name: 'Conduite' },
  { icon: 'coop√©ration', name: 'Coop√©ration' },
  { icon: 'course', name: 'Course' },
  { icon: 'drift', name: 'Drift' },
  { icon: 'dr√¥les', name: 'Dr√¥les' },
  { icon: 'en-ligne', name: 'En Ligne' },
  { icon: 'fille', name: 'Fille' },
  { icon: 'flash', name: 'Flash' },
  { icon: 'foot', name: 'Foot' },
  { icon: 'fous', name: 'Fous' },
  { icon: 'fps', name: 'FPS' },
  { icon: 'gar√ßon', name: 'Gar√ßon' },
  { icon: 'guerre', name: 'Guerre' },
  { icon: 'habillage', name: 'Habillage' },
  { icon: 'halloween', name: 'Halloween' },
  { icon: 'horreur', name: 'Horreur' },
  { icon: 'io', name: 'IO' },
  { icon: 'multijoueur', name: 'Multijoueur' },
  { icon: 'obby', name: 'Obby' },
  { icon: 'past√®que', name: 'Past√®que' },
  { icon: 'plateforme', name: 'Plateforme' },
  { icon: 'puzzle', name: 'Puzzle' },
  { icon: 'r√©flexe', name: 'R√©flexe' },
  { icon: 'simulation', name: 'Simulation' },

  { icon: 'tir', name: 'Tir' },
  { icon: 'vid√©o', name: 'Vid√©o' },
  { icon: 'voiture-de-course', name: 'Voiture de Course' },
  { icon: 'voiture', name: 'Voiture' },
  { icon: 'zombie', name: 'Zombie' },
];
---

<style>
  body {
    font-family: 'Poppins', sans-serif;
    background: url('/bg-diamante.svg'), linear-gradient(90deg, #66fcd2, #00d9ff);
    min-height: 100vh;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
  }

  .page-container {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    gap: 30px;
    max-width: 1600px;
    
    padding: 20px;
  }

  .side-column {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 12px;
    width: 230px;
  }

  .side-column a {
    display: block;
    border-radius: 12px;
    overflow: hidden;
    background: white;
    aspect-ratio: 1 / 1;
    box-shadow: 0 4px 10px rgba(0,0,0,0.08);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .side-column a:hover {
    transform: scale(1.05);
    box-shadow: 0 8px 16px rgba(0,0,0,0.15);
  }

  .side-column img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .main-game {
    flex: 1;
    max-width: 900px;
  }

  .game-iframe {
    width: 100%;
    height: 600px;
    border: none;
    border-radius: 16px;
    box-shadow: 0 8px 20px rgba(0,0,0,0.1);
  }

  /* ‚úÖ Barre d‚Äôinfos sous le jeu */
  .game-info-bar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    background: white;
    border-radius: 12px;
    margin-top: 10px;
    padding: 12px 20px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    flex-wrap: wrap;
  }

  .game-info-left {
    display: flex;
    align-items: center;
    gap: 15px;
  }

  .game-info-left img {
    width: 56px;
    height: 56px;
    border-radius: 10px;
    object-fit: cover;
  }

  .game-info-details h3 {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
  }

  .game-info-details p {
    margin: 0;
    font-size: 0.9rem;
    color: #555;
  }

  .game-info-actions {
    display: flex;
    align-items: center;
    gap: 15px;
  }

  .like-btn, .dislike-btn, .fullscreen-btn {
    display: flex;
    align-items: center;
    gap: 5px;
    background: #f5f5f5;
    padding: 8px 12px;
    border-radius: 8px;
    border: none;
    cursor: pointer;
    transition: background 0.2s ease;
  }

  .like-btn:hover { background: #c8f7c5; }
  .dislike-btn:hover { background: #ffcaca; }
  .fullscreen-btn:hover { background: #d0f0ff; }

  .like-btn img, .dislike-btn img, .fullscreen-btn img {
    width: 20px;
    height: 20px;
  }

  /* ‚úÖ Description pleine largeur */
  .description-section-full {
    position: relative;
    left: 50%;
    transform: translateX(-50%);
    width: 95vw;
    max-width: 1800px;
    margin-top: -80px;
    padding: 40px 100px 60px;
    background: transparent;
    color: #0a1f44;
    line-height: 1.8;
    font-size: 1rem;
  }

  /* ‚úÖ Cat√©gories pleine largeur */
  .categories-section-full {
    position: relative;
    left: 50%;
    margin-top: -30px;
    transform: translateX(-50%);
    width: 95vw;
    padding: 60px 100px;
    background: transparent;
  }

  .categories-section-full .categories-grid {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    gap: 20px;
    max-width: 1800px;
    margin: 0 auto;
  }

  .categories-section-full .category-card {
    background: white;
    border-radius: 12px;
    padding: 14px;
    text-align: center;
    box-shadow: 0 3px 8px rgba(0,0,0,0.08);
    transition: 0.2s ease;
  }

  .categories-section-full .category-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 16px rgba(0,0,0,0.15);
  }

  .categories-section-full .highlight {
    background: #ffe55c;
    font-weight: bold;
  }

   .related-games {
    margin-top: 10px;
  }

  .related-games h2 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 15px;
    color: #0a1f44;
  }

  .games-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    gap: 16px;
  }

  .game-card {
    background: white;
    border-radius: 10px;
    overflow: hidden;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    box-shadow: 0 4px 10px rgba(0,0,0,0.08);
  }

  .game-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px rgba(0,0,0,0.15);
  }

  .game-card img {
    width: 100%;
    height: 120px;
    object-fit: cover;
  }

</style>

<MainLayout title={game.title} description={`Play ${game.title} online for free`}>
  <main class="page-container">
    <aside class="side-column">
      {otherGames.slice(0, 18).map((g) => (
        <a href={`/game/${g.slug}`} title={g.title}>
          <img src={g.thumb} alt={g.title} loading="lazy" />
        </a>
      ))}
    </aside>

    <section class="main-game">
      <!-- ‚úÖ Iframe du jeu -->
      <iframe
        src={game.iframe}
        class="game-iframe"
        allowfullscreen
        loading="lazy"
        title={game.title}
        id="gameFrame"
      ></iframe>

      <!-- ‚úÖ Barre d‚Äôinfos -->
      <div class="game-info-bar">
        <div class="game-info-left">
          <img src={game.thumb} alt={game.title} />
          <div class="game-info-details">
            <h3>{game.title}</h3>
            <p>by {game.author || 'Unknown Developer'}</p>
          </div>
        </div>

        <div class="game-info-actions">
      <!-- üëç Like -->
  <button class="like-btn" id="likeBtn" title="Like this game">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="22" height="22" fill="none" stroke="#22c55e" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M14 9V5a3 3 0 0 0-6 0v4H4v10h16V9z" />
      <path d="M14 9l6 0" opacity="0" />
    </svg>
    <span id="likeCount">16.3K</span>
  </button>

  <!-- üëé Dislike -->
  <button class="dislike-btn" id="dislikeBtn" title="Dislike this game">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="22" height="22" fill="none" stroke="#ef4444" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M10 15v4a3 3 0 0 0 6 0v-4h4V5H4v10z" />
    </svg>
    <span id="dislikeCount">2.4K</span>
  </button>

  <!-- ‚õ∂ Fullscreen -->
  <button class="fullscreen-btn" id="fullscreenBtn" title="Fullscreen mode">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="22" height="22" fill="none" stroke="#0ea5e9" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polyline points="15 3 21 3 21 9" />
      <polyline points="9 21 3 21 3 15" />
      <line x1="21" y1="3" x2="14" y2="10" />
      <line x1="3" y1="21" x2="10" y2="14" />
    </svg>
    <span>Fullscreen</span>
  </button>
        </div>
      </div>

       <!-- ‚úÖ Section Other Games -->
      <section class="related-games">

        <div class="games-grid">
          {otherGames.slice(0, 15).map((g) => (
            <a href={`/game/${g.slug}`} class="game-card">
              <img src={g.thumb} alt={g.title} loading="lazy" />
            </a>
          ))}
        </div>
      </section>
      <!-- ‚úÖ Cat√©gories -->
      <section class="categories-section-full">
        <div class="categories-grid">
          {categories.map((category) => (
            <div class={`category-card ${category.highlight ? 'highlight' : ''}`}>
              <img src={`/icons/${category.icon}.png`} alt={category.name} class="w-16 h-16 mb-2" />
              <span>{category.name}</span>
            </div>
          ))}
        </div>
      </section>

      <!-- ‚úÖ Description -->
      <section class="description-section-full">
        <GameDescription slug={slug} />
      </section>
    </section>

    <aside class="side-column">
      {otherGames.slice(12, 30).map((g) => (
        <a href={`/game/${g.slug}`} title={g.title}>
          <img src={g.thumb} alt={g.title} loading="lazy" />
        </a>
      ))}
    </aside>
  </main>

  <script>
    const fsBtn = document.getElementById('fullscreenBtn');
    const iframe = document.getElementById('gameFrame');
    fsBtn?.addEventListener('click', () => {
      if (iframe.requestFullscreen) iframe.requestFullscreen();
      else if (iframe.webkitRequestFullscreen) iframe.webkitRequestFullscreen();
      else if (iframe.msRequestFullscreen) iframe.msRequestFullscreen();
    });

    let likes = 16300;
    let dislikes = 2400;
    const likeCount = document.getElementById('likeCount');
    const dislikeCount = document.getElementById('dislikeCount');

    document.getElementById('likeBtn')?.addEventListener('click', () => {
      likes++;
      likeCount.textContent = (likes / 1000).toFixed(1) + 'K';
    });
    document.getElementById('dislikeBtn')?.addEventListener('click', () => {
      dislikes++;
      dislikeCount.textContent = (dislikes / 1000).toFixed(1) + 'K';
    });
  </script>
</MainLayout>
